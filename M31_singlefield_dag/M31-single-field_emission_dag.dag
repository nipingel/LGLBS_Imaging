#!/usr/bin/env M31-single-field_emission_dag.dag

## TRANSFER AND SPLIT STAGED MEASUREMENT SETS
## transfer_and_split.sub to transfer measurement and split spw/single field for imaging
## executable:
## - transfer_and_split.sh
## inputs:
## - src_name: source name
## - timebin_str: number of seconds to average visibilites (config-dependent)
## - field_id1: name of first field
## - field_id2: name of second field
## - v_sys: systemic velocity of source
## - v_width: velocity width of source
## - rest_freq: rest frequency of spectral line
## - time_bin_str: time binning (5 for B-config)
## output:
## - tarball split-out measurement set
## JOB A transfer_and_split.sub
## VARS A src_name="M31" v_sys="-296" v_width="700" rest_freq="1.420406" time_bin_str="5" field_id1="M31LARGE_14" field_id2="M31LARGE_47"
## PARENT A CHILD B


## MSTRANSFORM
## place all split-out measurement sets on same spectral axis & reference frame
## executable:
## - ms_transform.sh (runs ms_transform.py)
## inputs:
## - ms_name: file name in textfile
## - ref_frame: output reference frame (e.g., 'LSRK' or 'BARY')
## - chan_width: channel width in units of Hz
## - src_name: source name
## output:
## - tarball of measurement sets that have been transformed to the user provided reference frame and spectral channel width
## JOB C ms_transform.sub
## VARS C ref_frame="LSRK" chan_width="1953.71094083786" src_name="M31"
## PARENT C CHILD D

## CONTSUB
## run continuum subtraction for all measurement sets from all VLA configurations
## executable:
## - uvcontsub.sh (runs uvcontsub.py)
## arguments:
## - ms_name: file name in textfile
## - v_sys: systemic velocity of source
## - v_width: velocity width of source
## - src_name: source name
## output:
## - contsubed measurement sets with '.contsub' suffix appended
## JOB D uvcontsub.sub
## VARS D src_name="M31" v_sys="-296" v_width="700"
## PARENT D CHILD E

## SPLIT FOR CONCAT (run in individual jobs separate from DAG)
## split out channels from measurement sets with more than minumum number of total channels
## to ensure all measurement sets have same number of channels for concat step (runs in staging area)
## executable:
## - split_channels_concat.sh (runs split_channels.py)
## arguments:
## - ms_name - full path to measurement set (input text file)
## - start_chan - starting channel to split (input text file)
## - end_chan - ending channel to split (input text file)
## output:
## - split out measurement sets with equal number of channels so concat step will combine into a single spw
## JOB D split_channels_concat.sub
## PARENT D CHILD E

## CONCAT
## concatenate (combine) measurement sets from all VLA configurations in staging area
## executable:
## - concat.sh (runs concat.py)
## arguments:
## - outfile_name: name of concatenated measurement set
## - extension: file extension to use for concatenation
## - src_name: source name
## output:
## ## - concatenated measurement set in staging area
JOB E concat.sub
VARS E src_name="M31" 
PARENT E CHILD F

## COMBINE_SPW
## run mstransform again to combine all spectral windows in concatenated measurement set
## executable:
## -  ms_transform_combine_spw.sh (runs c  ms_transform_combine_spw.py)
## arguments:
## - src_name: source name
## output:
## - concantenated measurement set with a single spectral window
JOB F ms_transform_combine_spw.sub
VARS F src_name="M31"
PARENT F CHILD H

## STATWT
## re-weight visibilities based on root mean square noise in emission-free regions. Use systemic velocity and velocity width to mask channels with expected emission. 
## executable:
## - statwt.sh (runs statwt.py)
## arguments:
## - v_sys: systemic velocity of source
## - v_width: velocity width of source
## - src_name: source name
## output:
## - re-weighted concatenated measurement sets with '.wt' appended to name
JOB H statwt.sub
VARS H v_sys="-296" v_width="700" src_name="M31"
## PARENT F CHILD G

## SPLIT FOR IMAGING
## split out channels from concatenated measurement set for imaging
## executable:
## - split_channels.sh (runs split_channels.py)
## arguments: 
## - src_name: source name
## - start_chan: starting channel to split
## output:
### - tarballs of individual channels
## JOB G split_channels.sub
## VARS G src_name="M31" start_chan="1200"
## PARENT G CHILD H

## IMAGING
## run tclean to imagine single channels
## executable:
## - image_channel.sh (runs image_channel.py)
## inputs:
## - ms_name: concatenated measurement set (without channel number ID, to be appended in execution script)
## output:
## - tarball containing tclean output for single spectral channels
## JOB H image_channel.sub
## VARS H src_name="M31"
## PARENT H CHILD I

## UNTAR FOR COMBINATION
## untar and move back desired output images to staging area for combination
## executable:
## - untar_images.sh (runs untar_images.sh)
## inputs:
## - suffix: CASA file suffix to move back to staging (e.g., image, image.pbcor, residual, etc.)
## - src_name: source_name
## - file_name: root name of files
## output:
## - extracted CASA image file in staging area
## JOB I untar_images.sub
## VARS I suffix="image.pbcor" src_name="M31" root_file_name_1="M31_field14.ms" root_file_name_2="M31_field47.ms"
## PARENT I CHILD J

## COMBINE IMAGES
## finally, combine the 2D images into 3-dimensional data cube (dims: sky position, sky position, frequency/velocity)
## executable:
## - fitsconcat.sh (runs combine_image.py)
## inputs:
## - suffix: combine all files with *.suffix
## - output_name: name of output data cube (in FITS format)
## - src_name: source name
## - delta_nu: spectral width of channels in kHz
## output:
## - final data cube
## JOB J fitsconcat.sub
## VARS J suffix = "image.pbcor" src_name="M31" delta_nu="1953.71094083"
#PARENT M CHILD N

## UVCOMBINE
## feather images in Fourier space with uvcombine python package
## executable:
## - feather_cubes.sh
## inputs:
## - src_name: source name for directory path
## - sdcube: name of lowres cube
## - interfcube: name of highres cube
## - outpath: output path/filename
## - galaxy: name of galaxy
## JOB N feather_cubes.sub
## VARS N src_name="IC10" sdcube="IC10_GBT_Jy.fits" interfcube="IC10_A+B+C+D_HI_0p4kms.fits" outpath="/projects/vla-processing/images/IC10" galaxy="ic10"
