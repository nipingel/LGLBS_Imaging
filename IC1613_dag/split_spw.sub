# split_spw.sub
# script to submit job to split a a spectral window from LGLBS measurement sets
#
# Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs) and your desired name of the HTCondor log file,
#  which is where HTCondor will describe what steps it takes to run 
#  your job. Wherever you see $(Cluster), HTCondor will insert the 
#  queue number assigned to this set of jobs at the time of submission.
universe = docker
docker_image = nipingel/casa:latest
#
# Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
#  $(Process) will be a integer number for each job, starting with "0"
#  and increasing for the relevant number of jobs.
executable = split_spw.sh
arguments = $(ms_name) $(src_config) $(time_bin_str) $(v_sys) $(v_width) $(rest_freq) $(src_name)
output = spw_split-$(Process).out
error = spw_split-$(Process).err
log = spw_split-$(Process).log

# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. The last of these lines *would* be
#  used if there were any other files needed for the executable to use.
Requirements=(Target.HasCHTCStaging == true) && (OpSysMajorVer =?= 8)
+HasCHTCStaging=true
# Tell HTCondor what amount of compute resources
#  each job will need on the computer where it runs.
transfer_input_files = split_spw.py, split_spw.sh, /home/nmpingel/software/analysis_scripts.tar, /home/nmpingel/software/phangs_imaging_scripts.tar
request_cpus = 1
request_memory = 10GB
request_disk = 300GB
#
# Tell HTCondor to run 1 instances of our job:
queue ms_name,src_config,time_bin_str from spw-split-list.txt