# split_channels_concat.sub
# script to submit job to split channels from staged & calibrated LGLBS measurement set
#
# Specify the HTCondor Universe (vanilla is the default and is used
#  for almost all jobs) and your desired name of the HTCondor log file,
#  which is where HTCondor will describe what steps it takes to run 
#  your job. Wherever you see $(Cluster), HTCondor will insert the 
#  queue number assigned to this set of jobs at the time of submission.
universe = docker
docker_image = nipingel/casa:latest
#
# Specify your executable (single binary or a script that runs several
#  commands), arguments, and a files for HTCondor to store standard
#  output (or "screen output").
#  $(Process) will be a integer number for each job, starting with "0"
#  and increasing for the relevant number of jobs.
executable = split_channels_concat.sh

arguments = $(ms_name) $(start_chan) $(end_chan) 
output = channel_split_concat_$(Process).out
error = channel_split_concat_$(Process).err
log = channel_split_concat_$(Process).log
#
# Specify that HTCondor should transfer files to and from the
#  computer where each job runs. The last of these lines *would* be
#  used if there were any other files needed for the executable to use.
Requirements=(Target.HasCHTCStaging == true) && (OpSysMajorVer =?= 8)
+HasCHTCStaging=true
# Tell HTCondor what amount of compute resources
#  each job will need on the computer where it runs.
transfer_input_files = split_channels.py, split_channels_concat.sh
request_cpus = 1
request_memory = 10GB
request_disk = 10GB
#
# Tell HTCondor to run 1 instances of our job:
queue ms_name,start_chan,end_chan from split_concat_list.csv